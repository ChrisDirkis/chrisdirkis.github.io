{"version":3,"sources":["Components/Title.module.scss","Components/Title.tsx","Components/Card.tsx","Pages/Home.tsx","serviceWorker.js","Components/Header.tsx","Pages/Article.tsx","index.tsx","Components/Card.module.scss","Components/Header.module.scss","Pages/Article.module.scss","Pages/Home.module.scss"],"names":["module","exports","Title","imagePath","title","onClick","className","Style","style","cursor","src","alt","Card","props","name","imageHref","path","window","location","hash","children","cards","content","imageAlt","Home","headercontainer","backtitle","headerimage","fronttitle","zIndex","contentcontainer","href","height","map","c","key","Boolean","hostname","match","Header","Article","markdownPath","articleTitle","useState","md","setMd","useEffect","a","fetch","markdown","text","asyncEffect","width","maxWidth","source","escapeHtml","ReactDOM","render","StrictMode","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6cce7593.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"article-title\":\"Title_article-title__1hn_C\",\"title-text\":\"Title_title-text__3dsap\",\"title-image\":\"Title_title-image__aYfvM\",\"title-image-overlay\":\"Title_title-image-overlay__1ov9G\"};","import React, {FC} from 'react';\r\nimport Style from \"./Title.module.scss\";\r\n\r\nconst Title: FC<{imagePath: string, title: string, onClick?: () => void}> = ({imagePath, title, onClick}) => {\r\n\r\n    \r\n    return (\r\n        <div \r\n            className={Style[\"article-title\"]} \r\n            style={{cursor: onClick ? \"pointer\" : \"initial\"}} \r\n            onClick={onClick}\r\n        >\r\n                    \r\n            <div className={Style[\"title-text\"]}>\r\n                <h1>{title}</h1>\r\n            </div>\r\n            <div className={Style[\"title-image\"]} >\r\n                <img src={imagePath} alt=\"\" />           \r\n                <div className={Style[\"title-image-overlay\"]} />\r\n                \r\n                <div className={Style[\"title-text\"]}>\r\n                    <h1>{title}</h1>\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import React, {FC} from 'react';\r\n\r\nimport Style from './Card.module.scss';\r\nimport Title from './Title';\r\n\r\ninterface ICardProps {\r\n    name: string;\r\n    imageHref: string;\r\n    imageAlt: string;\r\n    path: string;\r\n}\r\n\r\nconst setPath = (path: string) => {\r\n    window.location.hash = path;\r\n}\r\n\r\nconst Card: FC<ICardProps> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={Style[\"card\"]}>\r\n                <Title title={props.name} imagePath={props.imageHref} onClick={() => setPath(props.path)} />\r\n                <div className={Style[\"content-container\"]}>\r\n                    <div className={Style[\"content\"]}>\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Style from './Home.module.scss';\r\nimport Card from '../Components/Card';\r\n\r\nconst cards = [\r\n  {\r\n    name: \"siteLab\",\r\n    path: \"/siteLab\",\r\n    content: <>\r\n      <p>\r\n        <em>siteLab</em> is a Unity framework that allows Unsigned Studio to easily develop high quality real-time visualisations. It provides a consistent look and feel across projects, with common tools and affordances. siteLab can also be customised with project specific tools and branding.\r\n      </p>\r\n      <p>\r\n        siteLab has been used in over 100 projects, and won the Good Design Australia 2020 Gold Award. \r\n      </p>\r\n      </>,\r\n    imageHref: \"/images/sitelab_1.jpg\",\r\n    imageAlt: \"siteLab being used on a tablet device\",\r\n  },  \r\n  {\r\n    name: \"Particulate\",\r\n    path: \"/Particulate\",\r\n    content: <p>\r\n        <em>Particulate</em> is a Unity plugin to render Potree formatted pointclouds. It can stream pointclouds of any size or level of detail to any device, without impacting framerates or quality.\r\n      </p>,\r\n    imageHref: \"/images/particulate_1.jpg\",\r\n    imageAlt: \"An image of the inside of a pump station, the geometry rendered as points\",\r\n  },\r\n  {\r\n    name: \"BAC Skywalk\",\r\n    path: \"/BACSkywalk\",\r\n    content: <p>\r\n        <em>BAC Skywalk</em> is a VR project built for Brisbane Airport Coroporation, built to explore different wayfinding options in a spatial environment. \r\n      </p>,\r\n    imageHref: \"/images/skywalk_1.jpg\",\r\n    imageAlt: \"siteLab being used on a tablet device\",\r\n  },\r\n]\r\n\r\nfunction Home() {\r\n\r\n  return (\r\n    <>\r\n    <div className={Style.headercontainer}>\r\n      <h1 className={Style.backtitle}>Chris<br/>Dirkis</h1>\r\n      <div className={Style.headerimage}>\r\n        <h1 className={Style.fronttitle} style={{zIndex: 1}}>Chris<br/>Dirkis</h1>\r\n      </div>    \r\n    </div>\r\n    <div className={Style.contentcontainer}>\r\n      <div className={Style.content}>\r\n        <p>is making cool stuff using (but not limited to) Unity, React, Three.JS, and Python.</p>\r\n        <p>Check it out below!</p>\r\n        <p>You can contact me via <a href=\"mailto:me@chrisdirk.is\">email</a> or <a href=\"https://twitter.com/chrisdirkis\">twitter</a>, or check out my <a href=\"https://github.com/ChrisDirkis\">github</a>.</p>\r\n        <div style={{height: \"2em\"}} />\r\n        {cards.map(c => <Card \r\n          key={c.name}\r\n          name={c.name}\r\n          path={c.path}\r\n          imageHref={c.imageHref}\r\n          imageAlt={c.imageAlt}\r\n        >\r\n          {c.content}\r\n        </Card>)}\r\n\r\n      </div>\r\n    </div>\r\n   </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nimport React, { FC } from \"react\";\r\n\r\nimport Style from './Header.module.scss';\r\n\r\n\r\nconst Header: FC = () => {\r\n    \r\n    return (\r\n      <div className={Style[\"header-container\"]}>\r\n        <h1><a href=\"#/\" >Chris Dirkis</a></h1>          \r\n        <div className={Style[\"header\"]}>    \r\n            <h1><a href=\"#/\" >Chris Dirkis</a></h1>\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n\r\n}\r\n\r\nexport default Header;","import React, { FC, useEffect, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport Header from '../Components/Header';\r\nimport Title from '../Components/Title';\r\n\r\nimport Style from \"./Article.module.scss\";\r\n\r\ninterface IArticleProps {\r\n    markdownPath: string;\r\n    imagePath: string;\r\n    articleTitle: string;\r\n}\r\nconst Article: FC<IArticleProps> = ({markdownPath, imagePath, articleTitle}) => {\r\n    const [md, setMd] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const asyncEffect = async () => {\r\n            \r\n            const markdown = await fetch(markdownPath);\r\n            setMd(await markdown.text());\r\n        }\r\n\r\n        asyncEffect();\r\n    }, [setMd, markdownPath])\r\n\r\n\r\n    return (\r\n        <>\r\n        <Header />\r\n        <div className={Style[\"content-container\"]}>\r\n            <Title imagePath={imagePath} title={articleTitle} />\r\n            <div className={Style[\"content\"]}>\r\n                <div style={{width: \"100%\", maxWidth: \"800px\"}}>\r\n                    <ReactMarkdown source={md} escapeHtml={false}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Article;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './Pages/Home';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport Header from './Components/Header';\n\nimport './Root.scss';\nimport Article from './Pages/Article';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/siteLab\">\n            <Article articleTitle=\"siteLab\" markdownPath=\"/markdown/siteLab.md\" imagePath=\"/images/sitelab_1.jpg\" />\n          </Route>\n          <Route path=\"/particulate\">\n            <Article articleTitle=\"Particulate\" markdownPath=\"/markdown/particulate.md\" imagePath=\"/images/particulate_1.jpg\" />\n          </Route>\n          <Route path=\"/bacskywalk\">\n            <Article articleTitle=\"BAC Skywalk\" markdownPath=\"/markdown/bacskywalk.md\" imagePath=\"/images/skywalk_1.jpg\" />\n          </Route>\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2FV-w\",\"content-container\":\"Card_content-container__lr741\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-container\":\"Header_header-container__2nyMT\",\"header\":\"Header_header__24tbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-container\":\"Article_content-container__bi8_Q\",\"content\":\"Article_content__8eIic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headercontainer\":\"Home_headercontainer__rBOv5\",\"headerimage\":\"Home_headerimage__3rk_h\",\"fronttitle\":\"Home_fronttitle__32AIQ\",\"backtitle\":\"Home_backtitle__3ItMr\",\"contentcontainer\":\"Home_contentcontainer__rC3FZ\",\"content\":\"Home_content__3SYml\"};"],"sourceRoot":""}