{"version":3,"sources":["Components/Header.module.scss","Components/Title.module.scss","Components/Title.tsx","Components/Card.tsx","Pages/Home.tsx","serviceWorker.js","Components/Header.tsx","Pages/Article.tsx","index.tsx","Components/Card.module.scss","Pages/Home.module.scss","Pages/Article.module.scss"],"names":["module","exports","Title","imagePath","title","onClick","className","Style","style","cursor","src","alt","Card","props","name","imageHref","path","window","location","hash","children","cards","content","imageAlt","Home","contentcontainer","map","c","key","Boolean","hostname","match","Header","gridArea","href","size","icon","faAt","faTwitter","faGithub","Article","markdownPath","articleTitle","useState","md","setMd","useEffect","a","fetch","markdown","text","asyncEffect","width","maxWidth","source","ReactDOM","render","StrictMode","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fee07970.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stripes\":\"Header_stripes__2LBMo\",\"s1\":\"Header_s1__f4JEf\",\"s2\":\"Header_s2__HH4OV\",\"s3\":\"Header_s3__1FQII\",\"header-container\":\"Header_header-container__3LzcU\",\"header\":\"Header_header__3vevu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article-title\":\"Title_article-title__sKp4b\",\"title-text\":\"Title_title-text__1bkEB\",\"title-image\":\"Title_title-image__frL7Y\"};","import React, {FC} from 'react';\r\nimport Style from \"./Title.module.scss\";\r\n\r\nconst Title: FC<{imagePath: string, title: string, onClick?: () => void}> = ({imagePath, title, onClick}) => {\r\n\r\n    \r\n    return (\r\n        <div \r\n            className={Style[\"article-title\"]} \r\n            style={{cursor: onClick ? \"pointer\" : \"initial\"}} \r\n            onClick={onClick}\r\n        >\r\n                    \r\n            <div className={Style[\"title-text\"]}>\r\n                <h1>{title}</h1>\r\n            </div>\r\n            <div className={Style[\"title-image\"]} >\r\n                <div className={Style[\"title-text\"]}>\r\n                    <h1>{title}</h1>\r\n                </div>\r\n                <img src={imagePath} alt=\"\" />                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import React, {FC} from 'react';\r\n\r\nimport Style from './Card.module.scss';\r\nimport Title from './Title';\r\n\r\ninterface ICardProps {\r\n    name: string;\r\n    imageHref: string;\r\n    imageAlt: string;\r\n    path: string;\r\n}\r\n\r\nconst setPath = (path: string) => {\r\n    window.location.hash = path;\r\n}\r\n\r\nconst Card: FC<ICardProps> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={Style[\"card\"]}>\r\n                <Title title={props.name} imagePath={props.imageHref} onClick={() => setPath(props.path)} />\r\n                <div className={Style[\"content-container\"]}>\r\n                    <div className={Style[\"content\"]}>\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Style from './Home.module.scss';\r\nimport Card from '../Components/Card';\r\n\r\nconst cards = [\r\n  {\r\n    name: \"siteLab\",\r\n    path: \"/siteLab\",\r\n    content: <>\r\n      <p>\r\n        <em>siteLab</em> is a Unity framework that allows Unsigned Studio to easily develop high quality real-time visualisations. It provides a consistent look and feel across projects, with common tools and affordances. siteLab can also be customised with project specific tools and branding.\r\n      </p>\r\n      <p>\r\n        siteLab has been used in over 100 projects, and won the Good Design Australia 2020 Gold Award. \r\n      </p>\r\n      </>,\r\n    imageHref: \"/images/sitelab_1.jpg\",\r\n    imageAlt: \"siteLab being used on a tablet device\",\r\n  },  \r\n  {\r\n    name: \"Particulate\",\r\n    path: \"/Particulate\",\r\n    content: <p>\r\n        <em>Particulate</em> is a Unity plugin to render Potree formatted pointclouds. It can stream pointclouds of any size or level of detail to any device, without impacting framerates or quality.\r\n      </p>,\r\n    imageHref: \"/images/particulate_1.jpg\",\r\n    imageAlt: \"An image of the inside of a pump station, the geometry rendered as points\",\r\n  },\r\n  {\r\n    name: \"BAC Skywalk\",\r\n    path: \"/BACSkywalk\",\r\n    content: <p>\r\n        <em>BAC Skywalk</em> is a VR project built for Brisbane Airport Coroporation, built to explore different wayfinding options in a spatial environment. \r\n      </p>,\r\n    imageHref: \"/images/skywalk_1.jpg\",\r\n    imageAlt: \"siteLab being used on a tablet device\",\r\n  },\r\n]\r\n\r\nfunction Home() {\r\n\r\n  return (\r\n    <div className={Style.contentcontainer}>\r\n      <div className={Style.content}>\r\n        {cards.map(c => <Card \r\n          key={c.name}\r\n          name={c.name}\r\n          path={c.path}\r\n          imageHref={c.imageHref}\r\n          imageAlt={c.imageAlt}\r\n        >\r\n          {c.content}\r\n        </Card>)}\r\n      </div>    \r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nimport React, { FC } from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { faTwitter, faGithub } from \"@fortawesome/free-brands-svg-icons\"\r\nimport Style from './Header.module.scss';\r\n\r\n\r\nconst Header: FC = () => {\r\n    \r\n    return (\r\n      <div className={Style[\"header-container\"]}>          \r\n        <div className={Style[\"header\"]}>    \r\n            <h1 style={{gridArea: \"name\"}}><a href=\"#/\" >Chris Dirkis</a></h1>\r\n            <p style={{gridArea: \"email\"}}>\r\n              <FontAwesomeIcon size=\"1x\" icon={faAt} />\r\n              <a href=\"mailto:me@chrisdirk.is\">me@chrisdirk.is</a>\r\n            </p>\r\n            <p style={{gridArea: \"twitter\"}}>\r\n              <FontAwesomeIcon size=\"1x\" icon={faTwitter} />\r\n              <a href=\"https://twitter.com/chrisdirkis\">@chrisdirkis</a>\r\n            </p>\r\n            <p style={{gridArea: \"github\"}}>\r\n              <FontAwesomeIcon size=\"1x\" icon={faGithub} />\r\n              <a href=\"https://github.com/ChrisDirkis\">ChrisDirkis</a>\r\n            </p>\r\n        </div>\r\n        <div className={Style[\"stripes\"]}>\r\n            <div className={Style[\"s3\"]} />\r\n            <div className={Style[\"s2\"]} />\r\n            <div className={Style[\"s1\"]} />\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n\r\n}\r\n\r\nexport default Header;","import React, { FC, useEffect, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport Title from '../Components/Title';\r\n\r\nimport Style from \"./Article.module.scss\";\r\n\r\ninterface IArticleProps {\r\n    markdownPath: string;\r\n    imagePath: string;\r\n    articleTitle: string;\r\n}\r\nconst Article: FC<IArticleProps> = ({markdownPath, imagePath, articleTitle}) => {\r\n    const [md, setMd] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const asyncEffect = async () => {\r\n            \r\n            const markdown = await fetch(markdownPath);\r\n            setMd(await markdown.text());\r\n        }\r\n\r\n        asyncEffect();\r\n    }, [setMd, markdownPath])\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className={Style[\"content-container\"]}>\r\n            <Title imagePath={imagePath} title={articleTitle} />\r\n            <div className={Style[\"content\"]}>\r\n                <div style={{width: \"100%\", maxWidth: \"800px\"}}>\r\n                    <ReactMarkdown source={md} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Article;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from './Pages/Home';\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Header from './Components/Header';\r\n\r\nimport './Root.scss';\r\nimport Article from './Pages/Article';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Header />   \r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path=\"/siteLab\">\r\n            <Article articleTitle=\"siteLab\" markdownPath=\"/markdown/siteLab.md\" imagePath=\"/images/sitelab_1.jpg\" />\r\n          </Route>\r\n          <Route path=\"/particulate\">\r\n            <Article articleTitle=\"Particulate\" markdownPath=\"/markdown/particulate.md\" imagePath=\"/images/particulate_1.jpg\" />\r\n          </Route>\r\n          <Route path=\"/bacskywalk\">\r\n            <Article articleTitle=\"BAC Skywalk\" markdownPath=\"/markdown/bacskywalk.md\" imagePath=\"/images/skywalk_1.jpg\" />\r\n          </Route>\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2ANWa\",\"content-container\":\"Card_content-container__31K_n\",\"content\":\"Card_content__2zGA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentcontainer\":\"Home_contentcontainer__1cWjW\",\"content\":\"Home_content__tZhx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-container\":\"Article_content-container__3qLX3\",\"content\":\"Article_content__ot9Tr\"};"],"sourceRoot":""}