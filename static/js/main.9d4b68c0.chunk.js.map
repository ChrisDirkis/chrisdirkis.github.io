{"version":3,"sources":["Components/Header.module.scss","Pages/Article.module.scss","Components/Card.tsx","Pages/Home.tsx","serviceWorker.js","Components/Header.tsx","Pages/Article.tsx","index.tsx","Pages/Home.module.scss"],"names":["module","exports","Card","props","className","name","children","onClick","path","window","location","hash","src","imageHref","alt","imageAlt","cards","content","Home","Style","contentcontainer","map","c","key","Boolean","hostname","match","Header","style","gridArea","href","size","icon","faAt","faTwitter","faGithub","Article","markdownPath","imagePath","articleTitle","useState","md","setMd","useEffect","a","fetch","markdown","text","asyncEffect","width","maxWidth","source","ReactDOM","render","StrictMode","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9d4b68c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stripes\":\"Header_stripes__25HC-\",\"s1\":\"Header_s1__1FxRF\",\"s2\":\"Header_s2__1g7cX\",\"s3\":\"Header_s3__1R2Lr\",\"header-container\":\"Header_header-container__2nyMT\",\"header\":\"Header_header__24tbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-container\":\"Article_content-container__bi8_Q\",\"content\":\"Article_content__8eIic\",\"article-title\":\"Article_article-title__3GrR6\",\"title-text\":\"Article_title-text__17ASs\",\"title-image\":\"Article_title-image__vuXkT\"};","import React, {FC} from 'react';\r\n\r\nimport './Card.scss';\r\n\r\ninterface ICardProps {\r\n    name: string;\r\n    imageHref: string;\r\n    imageAlt: string;\r\n    path: string;\r\n}\r\n\r\nconst setPath = (path: string) => {\r\n    window.location.hash = path;\r\n}\r\n\r\nconst Card: FC<ICardProps> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"title\">\r\n                    <h1>{props.name}</h1>\r\n                </div>\r\n                <div className=\"content-container\">\r\n                    <div className=\"content\">\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n                <div className=\"images\" onClick={() => setPath(props.path)}>\r\n                    <div className=\"title\">\r\n                        <h1>{props.name}</h1>\r\n                    </div>\r\n                    {\r\n                    <img src={props.imageHref} alt={props.imageAlt} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\n\nimport Style from './Home.module.scss';\nimport Card from '../Components/Card';\n\nconst cards = [\n  {\n    name: \"siteLab\",\n    path: \"/siteLab\",\n    content: <>\n      <p>\n        <em>siteLab</em> is a Unity framework that allows Unsigned Studio to easily develop high quality real-time visualisations. It provides a consistent look and feel across projects, with common tools and affordances. siteLab can also be customised with project specific tools and branding.\n      </p>\n      <p>\n        siteLab has been used in over 100 projects, and won the Good Design Australia 2020 Gold Award. \n      </p>\n      </>,\n    imageHref: \"/images/sitelab_1.jpg\",\n    imageAlt: \"siteLab being used on a tablet device\",\n  },  \n  {\n    name: \"Particulate\",\n    path: \"/Particulate\",\n    content: <p>\n        <em>Particulate</em> is a Unity plugin to render Potree formatted pointclouds. It can stream pointclouds of any size or level of detail to any device, without impacting framerates or quality.\n      </p>,\n    imageHref: \"/images/particulate_1.jpg\",\n    imageAlt: \"An image of the inside of a pump station, the geometry rendered as points\",\n  },\n  {\n    name: \"BAC Skywalk\",\n    path: \"/BACSkywalk\",\n    content: <p>\n        <em>BAC Skywalk</em> is a VR project built for Brisbane Airport Coroporation, built to explore different wayfinding options in a spatial environment. \n      </p>,\n    imageHref: \"/images/skywalk_1.jpg\",\n    imageAlt: \"siteLab being used on a tablet device\",\n  },\n]\n\nfunction Home() {\n\n  return (\n    <div className={Style.contentcontainer}>\n      <div className={Style.content}>\n        {cards.map(c => <Card \n          key={c.name}\n          name={c.name}\n          path={c.path}\n          imageHref={c.imageHref}\n          imageAlt={c.imageAlt}\n        >\n          {c.content}\n        </Card>)}\n      </div>    \n    </div>\n   \n  );\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nimport React, { FC } from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { faTwitter, faGithub } from \"@fortawesome/free-brands-svg-icons\"\r\nimport Style from './Header.module.scss';\r\n\r\n\r\nconst Header: FC = () => {\r\n    \r\n    return (\r\n      <div className={Style[\"header-container\"]}>          \r\n        <div className={Style[\"header\"]}>    \r\n            <h1 style={{gridArea: \"name\"}}><a href=\"#/\" >Chris Dirkis</a></h1>\r\n            <p style={{gridArea: \"email\"}}>\r\n              <FontAwesomeIcon size=\"1x\" icon={faAt} />\r\n              <a href=\"mailto:me@chrisdirk.is\">me@chrisdirk.is</a>\r\n            </p>\r\n            <p style={{gridArea: \"twitter\"}}>\r\n              <FontAwesomeIcon size=\"1x\" icon={faTwitter} />\r\n              <a href=\"https://twitter.com/chrisdirkis\">@chrisdirkis</a>\r\n            </p>\r\n            <p style={{gridArea: \"github\"}}>\r\n              <FontAwesomeIcon size=\"1x\" icon={faGithub} />\r\n              <a href=\"https://github.com/ChrisDirkis\">ChrisDirkis</a>\r\n            </p>\r\n        </div>\r\n        <div className={Style[\"stripes\"]}>\r\n            <div className={Style[\"s3\"]} />\r\n            <div className={Style[\"s2\"]} />\r\n            <div className={Style[\"s1\"]} />\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n\r\n}\r\n\r\nexport default Header;","import React, { FC, useEffect, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nimport Style from \"./Article.module.scss\";\r\n\r\ninterface IArticleProps {\r\n    markdownPath: string;\r\n    imagePath: string;\r\n    articleTitle: string;\r\n}\r\nconst Article: FC<IArticleProps> = ({markdownPath, imagePath, articleTitle}) => {\r\n    const [md, setMd] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const asyncEffect = async () => {\r\n            \r\n            const markdown = await fetch(markdownPath);\r\n            setMd(await markdown.text());\r\n        }\r\n\r\n        asyncEffect();\r\n    }, [setMd, markdownPath])\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className={Style[\"content-container\"]}>\r\n            <div className={Style[\"article-title\"]}>\r\n                \r\n                <div className={Style[\"title-text\"]}>\r\n                    <h1>{articleTitle}</h1>\r\n                </div>\r\n                <div className={Style[\"title-image\"]} >\r\n                    <div className={Style[\"title-text\"]}>\r\n                        <h1>{articleTitle}</h1>\r\n                    </div>\r\n                    <img src={imagePath} alt=\"\" />                    \r\n                </div>\r\n            </div>\r\n            <div className={Style[\"content\"]}>\r\n                <div style={{width: \"100%\", maxWidth: \"800px\"}}>\r\n                    <ReactMarkdown source={md} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Article;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './Pages/Home';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport Header from './Components/Header';\n\nimport './Root.scss';\nimport Article from './Pages/Article';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />   \n      <HashRouter>\n        <Switch>\n          <Route path=\"/siteLab\">\n            <Article articleTitle=\"siteLab\" markdownPath=\"/markdown/siteLab.md\" imagePath=\"/images/sitelab_article_3.jpg\" />\n          </Route>\n          <Route path=\"/particulate\">\n            <Article articleTitle=\"Particulate\" markdownPath=\"/markdown/particulate.md\" imagePath=\"/images/particulate_1.jpg\" />\n          </Route>\n          <Route path=\"/bacskywalk\">\n            <Article articleTitle=\"BAC Skywalk\" markdownPath=\"/markdown/bacskywalk.md\" imagePath=\"/images/skywalk_1.jpg\" />\n          </Route>\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentcontainer\":\"Home_contentcontainer__rC3FZ\",\"content\":\"Home_content__3SYml\"};"],"sourceRoot":""}